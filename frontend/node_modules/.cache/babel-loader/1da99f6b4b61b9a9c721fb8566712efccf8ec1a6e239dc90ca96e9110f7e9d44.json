{"ast":null,"code":"var _jsxFileName = \"/app/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { login as apiLogin, logout as apiLogout, getCurrentUser, isAuthenticated } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function loadStoredData() {\n      setLoading(true);\n\n      // Verificar se o usuário está autenticado\n      if (isAuthenticated()) {\n        try {\n          // Carregar dados do usuário\n          const userData = await getCurrentUser();\n          setUser(userData);\n        } catch (error) {\n          // Em caso de erro, fazer logout\n          apiLogout();\n        }\n      }\n      setLoading(false);\n    }\n    loadStoredData();\n  }, []);\n  const login = async (username, password) => {\n    setLoading(true);\n    try {\n      // Fazer login e obter token\n      await apiLogin({\n        username,\n        password\n      });\n\n      // Carregar dados do usuário\n      const userData = await getCurrentUser();\n      setUser(userData);\n    } catch (error) {\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    apiLogout();\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signed: !!user,\n      user,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","login","apiLogin","logout","apiLogout","getCurrentUser","isAuthenticated","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","loadStoredData","userData","error","username","password","Provider","value","signed","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/app/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { login as apiLogin, logout as apiLogout, getCurrentUser, isAuthenticated } from '../services/auth';\r\n\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n}\r\n\r\ninterface AuthContextData {\r\n  signed: boolean;\r\n  user: User | null;\r\n  loading: boolean;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function loadStoredData() {\r\n      setLoading(true);\r\n      \r\n      // Verificar se o usuário está autenticado\r\n      if (isAuthenticated()) {\r\n        try {\r\n          // Carregar dados do usuário\r\n          const userData = await getCurrentUser();\r\n          setUser(userData);\r\n        } catch (error) {\r\n          // Em caso de erro, fazer logout\r\n          apiLogout();\r\n        }\r\n      }\r\n      \r\n      setLoading(false);\r\n    }\r\n\r\n    loadStoredData();\r\n  }, []);\r\n\r\n  const login = async (username: string, password: string) => {\r\n    setLoading(true);\r\n    \r\n    try {\r\n      // Fazer login e obter token\r\n      await apiLogin({ username, password });\r\n      \r\n      // Carregar dados do usuário\r\n      const userData = await getCurrentUser();\r\n      setUser(userData);\r\n    } catch (error) {\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    apiLogout();\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ signed: !!user, user, loading, login, logout }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useAuth(): AuthContextData {\r\n  const context = useContext(AuthContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,KAAK,IAAIC,QAAQ,EAAEC,MAAM,IAAIC,SAAS,EAAEC,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkB3G,MAAMC,WAAW,gBAAGZ,aAAa,CAAkB,CAAC,CAAoB,CAAC;AAEzE,OAAO,MAAMa,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,eAAekB,cAAcA,CAAA,EAAG;MAC9BD,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,IAAIV,eAAe,CAAC,CAAC,EAAE;QACrB,IAAI;UACF;UACA,MAAMY,QAAQ,GAAG,MAAMb,cAAc,CAAC,CAAC;UACvCS,OAAO,CAACI,QAAQ,CAAC;QACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;UACd;UACAf,SAAS,CAAC,CAAC;QACb;MACF;MAEAY,UAAU,CAAC,KAAK,CAAC;IACnB;IAEAC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMhB,KAAK,GAAG,MAAAA,CAAOmB,QAAgB,EAAEC,QAAgB,KAAK;IAC1DL,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF;MACA,MAAMd,QAAQ,CAAC;QAAEkB,QAAQ;QAAEC;MAAS,CAAC,CAAC;;MAEtC;MACA,MAAMH,QAAQ,GAAG,MAAMb,cAAc,CAAC,CAAC;MACvCS,OAAO,CAACI,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb,CAAC,SAAS;MACRH,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMb,MAAM,GAAGA,CAAA,KAAM;IACnBC,SAAS,CAAC,CAAC;IACXU,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACa,QAAQ;IACnBC,KAAK,EAAE;MAAEC,MAAM,EAAE,CAAC,CAACX,IAAI;MAAEA,IAAI;MAAEE,OAAO;MAAEd,KAAK;MAAEE;IAAO,CAAE;IAAAQ,QAAA,EAEvDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChB,EAAA,CAvDWF,YAAqD;AAAAmB,EAAA,GAArDnB,YAAqD;AAyDlE,OAAO,SAASoB,OAAOA,CAAA,EAAoB;EAAAC,GAAA;EACzC,MAAMC,OAAO,GAAGhC,UAAU,CAACS,WAAW,CAAC;EAEvC,IAAI,CAACuB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EAEA,OAAOD,OAAO;AAChB;AAACD,GAAA,CAReD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}